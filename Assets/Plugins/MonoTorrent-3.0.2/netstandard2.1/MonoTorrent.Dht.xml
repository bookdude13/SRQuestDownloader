<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MonoTorrent.Dht</name>
    </assembly>
    <members>
        <member name="T:MonoTorrent.Dht.Bucket">
            <summary>
            This class holds a maximum amount of 8 Nodes and is itself a child of a RoutingTable
            </summary>
        </member>
        <member name="P:MonoTorrent.Dht.MessageLoop.Engine">
            <summary>
             The DHT engine which owns this message loop.
            </summary>
        </member>
        <member name="P:MonoTorrent.Dht.MessageLoop.Listener">
            <summary>
            The listener instance which is used to send/receive messages.
            </summary>
        </member>
        <member name="P:MonoTorrent.Dht.MessageLoop.PendingQueries">
            <summary>
            The number of DHT messages which have been sent and no response has been received.
            </summary>
        </member>
        <member name="P:MonoTorrent.Dht.MessageLoop.ReceiveQueue">
            <summary>
            The list of messages which have been received from the attached IDhtListener which
            are waiting to be processed by the engine.
            </summary>
        </member>
        <member name="P:MonoTorrent.Dht.MessageLoop.SendQueue">
            <summary>
            The list of messages which have been queued to send.
            </summary>
        </member>
        <member name="P:MonoTorrent.Dht.MessageLoop.Timeout">
            <summary>
            If a response is not received before the timeout expires, it will be cancelled.
            </summary>
        </member>
        <member name="P:MonoTorrent.Dht.MessageLoop.WaitingResponse">
            <summary>
            This is the list of messages which have been sent but no response (or error) has
            been received yet. The key for the dictionary is the TransactionId for the Query.
            </summary>
        </member>
        <member name="P:MonoTorrent.Dht.MessageLoop.WaitingResponseTimedOut">
            <summary>
            Temporary (re-usable) storage when cancelling timed out messages.
            </summary>
        </member>
        <member name="P:MonoTorrent.GitInfoHelper.ClientVersion">
            <summary>
            The current version of the client in the form "MO1234", which represents a version triplet of '1.2.34'.
            </summary>
        </member>
        <member name="F:MonoTorrent.GitInfoHelper.Version">
            <summary>
            The full version of this library in the form 'A.B.C'.
            'A' and 'B' are guaranteed to be 1 digit each. 'C' can be one or two digits.
            </summary>
        </member>
        <member name="M:MonoTorrent.Client.MainLoop.SwitchToThreadpool">
            <summary>
            When <see cref="T:MonoTorrent.ThreadSwitcher"/> is awaited the continuation will be executed
            on the threadpool. If you are already on a threadpool thread the continuation
            will execute synchronously.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MonoTorrent.Client.MainLoop.SwitchThread">
            <summary>
            When <see cref="T:MonoTorrent.ThreadSwitcher"/> is awaited the continuation will always be queued on
            the ThreadPool for execution. It will never execute synchronously.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ThisAssembly">
            <summary>Provides access to the current assembly information.</summary>
        </member>
        <member name="T:ThisAssembly.Git">
            <summary>Provides access to the git information for the current assembly.</summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirty">
            <summary>IsDirty: false</summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirtyString">
            <summary>IsDirtyString: false</summary>
        </member>
        <member name="F:ThisAssembly.Git.RepositoryUrl">
            <summary>Repository URL: git@github.com:alanmcgovern/monotorrent</summary>
        </member>
        <member name="F:ThisAssembly.Git.Branch">
            <summary>Branch: master</summary>
        </member>
        <member name="F:ThisAssembly.Git.Commit">
            <summary>Commit: e78faebd</summary>
        </member>
        <member name="F:ThisAssembly.Git.Sha">
            <summary>Sha: e78faebd0aec117146cffccaaea987ab0629eec0</summary>
        </member>
        <member name="F:ThisAssembly.Git.CommitDate">
            <summary>Commit date: 2024-08-04T11:51:08+01:00</summary>
        </member>
        <member name="F:ThisAssembly.Git.Commits">
            <summary>Commits on top of base version: 0</summary>
        </member>
        <member name="F:ThisAssembly.Git.Tag">
            <summary>Tag: </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseTag">
            <summary>Base tag: </summary>
        </member>
        <member name="T:ThisAssembly.Git.BaseVersion">
            <summary>Provides access to the base version information used to determine the <see cref="T:ThisAssembly.Git.SemVer" />.</summary>      
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Major">
            <summary>Major: 3</summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Minor">
            <summary>Minor: 0</summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Patch">
            <summary>Patch: 2</summary>
        </member>
        <member name="T:ThisAssembly.Git.SemVer">
            <summary>Provides access to SemVer information for the current assembly.</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Major">
            <summary>Major: 3</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Minor">
            <summary>Minor: 0</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Patch">
            <summary>Patch: 2</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Label">
            <summary>Label: </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.DashLabel">
            <summary>Label with dash prefix: </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Source">
            <summary>Source: File</summary>
        </member>
    </members>
</doc>
